{"version":3,"file":"component---src-templates-blog-post-tsx-d32dec71ff1daebf8148.js","mappings":"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","sources":["webpack://gatsby-starter-apple/./src/styles/category.ts","webpack://gatsby-starter-apple/./src/components/comment.tsx","webpack://gatsby-starter-apple/./src/styles/dateTime.ts","webpack://gatsby-starter-apple/./src/templates/blogPost.tsx"],"sourcesContent":["import styled from \"styled-components\"\n\nconst Category = styled.span`\n  display: block;\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n  color: var(--color-text-3);\n`\n\nexport default Category\n","import React, { useRef, useContext, useEffect } from \"react\"\n\nimport ThemeContext from \"Stores/themeContext\"\nimport useSiteMetadata from \"Hooks/useSiteMetadata\"\nimport { DARK } from \"Constants/theme\"\n\nconst src = \"https://utteranc.es\"\nconst utterancesSelector = \"iframe.utterances-frame\"\nconst LIGHT_THEME = \"github-light\"\nconst DARK_THEME = \"github-dark\"\n\ntype ThemeMode = typeof LIGHT_THEME | typeof DARK_THEME\n\nconst Comment = () => {\n  const site = useSiteMetadata()\n  const { repo } = site.utterances ?? { repo: undefined }\n  const theme = useContext(ThemeContext)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const isUtterancesCreated = useRef(false)\n\n  useEffect(() => {\n    if (!repo) return\n    let themeMode: ThemeMode\n\n    if (!isUtterancesCreated.current) {\n      themeMode =\n        document.body.dataset.theme === DARK ? DARK_THEME : LIGHT_THEME\n    } else themeMode = theme === DARK ? DARK_THEME : LIGHT_THEME\n\n    const createUtterancesEl = () => {\n      const comment = document.createElement(\"script\")\n      const attributes = {\n        src: `${src}/client.js`,\n        repo,\n        \"issue-term\": \"title\",\n        label: \"comment\",\n        theme: themeMode,\n        crossOrigin: \"anonymous\",\n        async: \"true\",\n      }\n      Object.entries(attributes).forEach(([key, value]) => {\n        comment.setAttribute(key, value)\n      })\n      containerRef.current?.appendChild(comment)\n      isUtterancesCreated.current = true\n    }\n\n    const utterancesEl = containerRef.current?.querySelector(\n      utterancesSelector\n    ) as HTMLIFrameElement\n\n    const postThemeMessage = () => {\n      if (!utterancesEl) return\n      const message = {\n        type: \"set-theme\",\n        theme: themeMode,\n      }\n      utterancesEl?.contentWindow?.postMessage(message, src)\n    }\n\n    isUtterancesCreated.current ? postThemeMessage() : createUtterancesEl()\n  }, [repo, theme])\n\n  return <div ref={containerRef} />\n}\n\nComment.displayName = \"comment\"\n\nexport default Comment\n","import styled from \"styled-components\"\n\nconst DateTime = styled.time`\n  margin-top: 12px;\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-regular);\n  color: var(--color-text-3);\n`\n\nexport default DateTime\n","import React from \"react\"\nimport { graphql, type PageProps } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Layout from \"Layouts/layout\"\nimport SEO from \"Components/seo\"\nimport Comment from \"Components/comment\"\nimport { rhythm } from \"Styles/typography\"\nimport Category from \"Styles/category\"\nimport DateTime from \"Styles/dateTime\"\nimport Markdown from \"Styles/markdown\"\n\nconst BlogPost: React.FC<PageProps<Queries.Query>> = ({ data }) => {\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark!\n  const { title, desc, thumbnail, date, category, alt } = frontmatter!\n\n  const ogImagePath =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    thumbnail && thumbnail?.childImageSharp?.gatsbyImageData!.images!.fallback!.src\n\n  return (\n    <Layout>\n      <SEO title={title} desc={desc} image={ogImagePath} />\n      <main>\n        <article>\n          <OuterWrapper>\n            <InnerWrapper>\n              <div>\n                <header>\n                  <Info>\n                    <PostCategory>{category}</PostCategory>\n                    <Time dateTime={date!}>{date}</Time>\n                  </Info>\n                  <Title>{title}</Title>\n                  <Desc>{desc}</Desc>\n                </header>\n                <Divider />\n                <Markdown\n                  dangerouslySetInnerHTML={{ __html: html ?? \"\" }}\n                  rhythm={rhythm}\n                />\n              </div>\n            </InnerWrapper>\n          </OuterWrapper>\n        </article>\n        <CommentWrap>\n          <Comment />\n        </CommentWrap>\n      </main>\n    </Layout>\n  )\n}\n\nconst OuterWrapper = styled.div`\n  margin-top: var(--sizing-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    margin-top: var(--sizing-lg);\n  }\n`\n\nconst InnerWrapper = styled.div`\n  width: var(--post-width);\n  margin: 0 auto;\n  padding-bottom: var(--sizing-lg);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    width: 87.5%;\n  }\n`\n\nconst CommentWrap = styled.section`\n  width: 100%;\n  padding: 0 var(--padding-sm);\n  margin: 0 auto;\n  margin-bottom: var(--sizing-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    width: auto;\n  }\n`\n\nconst PostCategory = styled(Category)`\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n`\n\nconst Info = styled.div`\n  margin-bottom: var(--sizing-md);\n`\n\nconst Time = styled(DateTime)`\n  display: block;\n  margin-top: var(--sizing-xs);\n`\n\nconst Desc = styled.p`\n  margin-top: var(--sizing-lg);\n  line-height: 1.5;\n  font-size: var(--text-lg);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    line-height: 1.31579;\n    font-size: 1.1875rem;\n  }\n  font-style: italic;\n`\n\nconst Divider = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: var(--color-gray-3);\n  margin-top: var(--sizing-lg);\n  margin-bottom: var(--sizing-lg);\n`\n\nconst Title = styled.h1`\n  font-weight: var(--font-weight-bold);\n  line-height: 1.1875;\n  font-size: var(--text-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.md}) {\n    line-height: 1.21875;\n    font-size: 2.5rem;\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    line-height: 1.21875;\n    font-size: 2rem;\n  }\n`\n\nexport const query = graphql`\n  query BlogPostPage ($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        desc\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED, layout: FIXED)\n          }\n        }\n        date(formatString: \"YYYY-MM-DD\")\n        category\n      }\n    }\n  }\n`\n\nexport default BlogPost\n"],"names":["Category","styled","span","withConfig","displayName","componentId","src","LIGHT_THEME","DARK_THEME","Comment","_site$utterances","site","useSiteMetadata","repo","utterances","undefined","theme","useContext","ThemeContext","containerRef","useRef","isUtterancesCreated","useEffect","_containerRef$current2","themeMode","current","DARK","document","body","dataset","utterancesEl","querySelector","postThemeMessage","_utterancesEl$content","message","type","contentWindow","postMessage","createUtterancesEl","_containerRef$current","comment","createElement","attributes","label","crossOrigin","async","Object","entries","forEach","_ref","key","value","setAttribute","appendChild","React","ref","time","OuterWrapper","div","_ref2","device","sm","InnerWrapper","_ref3","CommentWrap","section","_ref4","PostCategory","Info","Time","DateTime","Desc","p","_ref5","Divider","Title","h1","_ref6","md","_ref7","_thumbnail$childImage","data","markdownRemark","frontmatter","html","title","desc","thumbnail","date","category","alt","ogImagePath","childImageSharp","gatsbyImageData","images","fallback","Layout","SEO","image","dateTime","Markdown","dangerouslySetInnerHTML","__html","rhythm"],"sourceRoot":""}